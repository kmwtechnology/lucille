connectors: [
  {
    name: "vfsConnector",
    class: "com.kmwllc.lucille.connector.VFSConnector",
    pipeline: "pipeline1",
    vfs_path: "path" # test to make sure that convertor does not change this
  },
]

pipelines: [
  {
    name: "pipeline1",
    stages: [
     {
       name:"TextExtractor"
       class: "com.kmwllc.lucille.tika.stage.TextExtractor"
       byte_array_field: "byte_array_field" # test for keeping snake_case for stage property values
       tika_config_path: "path/to/tika/config/with/tika_config_path/tika.xml" # test for stage property appearing in value
       metadata_whitelist: [""]
     },
     {
        name: "renameFields",
        class: "com.kmwllc.lucille.stage.RenameFields"
        fieldMapping: {
          "dc_subject": "subject", # test for ignoring mappings fieldMapping
          "message_to": "to",
          "message_from": "from",
        }
        update_mode: "overwrite" # test for update_mode
     },
     {
      class: "com.kmwllc.lucille.stage.DeleteFields"
      fields: ["file_content", "file_size_bytes", "file_creation_date"] # test for stage property list values
     },
     {
       class: "com.kmwllc.lucille.stage.DropDocument"
       conditionPolicy: "any"
       conditions = [ # test for conditions
         {
           fields = ["embeddings"],
           operator = "must_not"
         },
         {
           fields = ["embeddings"],
           values = [null]
           operator = "must"
         }
       ]
     }
    ]
  },
  {
        name: "pipeline2", # test for a secondary pipeline
        stages: [
          {
            class: "com.kmwllc.lucille.stage.Concatenate"
            dest: "information_before_vectorization"
            format_string: "{source} {city} {location}"
            update_mode: "append"
          },
          {
            class: "com.kmwllc.lucille.stage.SetStaticValues"
            static_values { # test changing of stage property where value are mappings
              "field1": "value1",
              "field2": "value2"
            }
            update_mode: "overwrite"
          }
        ]
  },
]

# test that remainder of config is untouched
indexer {
  type: "Solr"
  class: "com.kmwllc.lucille.indexer.SolrIndexer"
  sendEnabled: true
}

solr {
  url: "http://localhost:8983/solr/collection"
}

worker {
  pipeline: "pipeline1"
  threads: 1
  exitOnTimeout: "true"
  maxProcessingSecs: 600
  enableHeartbeat: true
}

runner {
  metricsLoggingLevel: "INFO"
}

publisher {
  queueCapacity: 10000
}

log {
  seconds: 30
}