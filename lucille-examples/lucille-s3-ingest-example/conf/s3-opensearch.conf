connectors: [
 {
    name: "fileConnector",
    class: "com.kmwllc.lucille.connector.FileConnector",
    pipeline: "pipeline1",
    getFileACLs: true,
    pathToStorage: ${PATH_TO_STORAGE}
    cloudOptions: {
      region: ${AWS_REGION}
      accessKeyId: ${AWS_ACCESS_KEY_ID}
      secretAccessKey: ${AWS_SECRET_ACCESS_KEY}
    }
 }
]

pipelines: [
  {
    name: "pipeline1",
    stages: [
     {
       name:"TextExtractor"
       class: "com.kmwllc.lucille.tika.stage.TextExtractor"
       byte_array_field: "file_content"
       metadata_prefix: ""
       metadata_blacklist: []
       tika_config_path: "conf/tika-config.xml"       
     },
     {
      name:"ChunkText"
      class: "com.kmwllc.lucille.stage.ChunkText"
      source: "text"
      dest: "text"
      chunking_method: "paragraph"
      # chunk_size: 1000
      # chunk_overlap: 500 - invalid
      # how many smaller chunks to merge into one final chunk
      # chunks_to_merge: 2
      # chunks_to_overlap: 1
     },
     {
      name: "EmitNestedChildren"
      class : "com.kmwllc.lucille.stage.EmitNestedChildren"
      drop_parent: "false"
     },
     {
      name: "DeleteFields"
      class : "com.kmwllc.lucille.stage.DeleteFields"
      fields : ["file_content", "_version"]
     },
      {
        class : "com.kmwllc.lucille.stage.Print",
        excludeFields: ["run_id"]
      }     
    ]
  }
]


indexer {
  type: "OpenSearch"
  batchTimeout: 1000
  batchSize: 100
  # uncomment below if you want message_id to replace id
  # idOverrideField: "message_id"
  sendEnabled: true
}

opensearch {
  url: ${INGEST_URL}
  index: ${INGEST_INDEX}
  acceptInvalidCert: true
}

worker {
  pipeline: "pipeline1"
  threads: 1
}
