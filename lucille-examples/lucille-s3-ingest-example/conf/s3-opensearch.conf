connectors: [
 {
    name: "fileConnector",
    class: "com.kmwllc.lucille.connector.FileConnector",
    pipeline: "pipeline1",
    # defining a default value so our unit tests can run.
    pathToStorage: "s3://bucket/files"
    pathToStorage: ${?PATH_TO_STORAGE}
    fileOptions: {
      getFileContent: true
    }
    s3: {
      region: "us-east-1"
      accessKeyId: "aBcD"
      secretAccessKey: "dEfG"

      region: ${?AWS_REGION}
      accessKeyId: ${?AWS_ACCESS_KEY_ID}
      secretAccessKey: ${?AWS_SECRET_ACCESS_KEY}
    }
 }
]

pipelines: [
  {
    name: "pipeline1",
    stages: [
     {
       name: "TextExtractor"
       class: "com.kmwllc.lucille.tika.stage.TextExtractor"
       # FileConnector places the content in this "file_content" field.
       byte_array_field: "file_content"
       metadata_prefix: ""
       metadata_blacklist: []
       tika_config_path: "conf/tika-config.xml"       
     },
     {
      name: "ChunkText"
      class: "com.kmwllc.lucille.stage.ChunkText"
      source: "text"
      dest: "text"
      chunking_method: "paragraph"
     },
     {
      name: "EmitNestedChildren"
      class: "com.kmwllc.lucille.stage.EmitNestedChildren"
      drop_parent: "false"
     },
     {
      name: "DeleteFields"
      class: "com.kmwllc.lucille.stage.DeleteFields"
      fields: ["file_content", "_version"]
     }   
    ]
  }
]


indexer {
  type: "OpenSearch"
  batchTimeout: 1000
  batchSize: 100
  # uncomment below if you want message_id to replace id
  # idOverrideField: "message_id"
  sendEnabled: true
}

opensearch {
  url: "http://localhost:9200"
  index: "s3-docs"

  url: ${?INGEST_URL}
  index: ${?INGEST_INDEX}
  acceptInvalidCert: true
}
