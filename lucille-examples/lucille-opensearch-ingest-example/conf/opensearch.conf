connectors: [
  {
    name: "fileConnector",
    class: "com.kmwllc.lucille.connector.FileConnector",
    pipeline: "pipeline1",
    # defining a default value so our unit tests can run.
    pathToStorage: "/Users/user1/enron"
    # absolute path to your enron maildir
    pathToStorage: ${?PATH_TO_ENRON}
  },
]

pipelines: [
  {
    name: "pipeline1",
    stages: [
     {
       name: "TextExtractor"
       class: "com.kmwllc.lucille.tika.stage.TextExtractor"
       byte_array_field: "file_content"
       metadata_prefix: ""
       metadata_blacklist: ["message_bcc", "content_type", "path",
                             "message_raw_header_x_folder", "message_raw_header_x_filename", "message_raw_header_x_origin",
                             "message_from_email", "message_raw_header_content_type", "message_raw_header_x_bcc", "dc_title",
                             "dc_creator", "message_raw_header_content_transfer_encoding", "message_raw_header_mime_version",
                             "message_from_name", "x_tika_parsed_by_full_set", "x_tika_parsed_by"]
       tika_config_path: "conf/tika-config.xml"
     },
     {
       name: "renameFields",
       class: "com.kmwllc.lucille.stage.RenameFields"
       fieldMapping: {
         "text": "body",
         "_message_raw_header_message_id": "message_id",
         "_dc_subject": "subject",
         "_message_to": "to",
         "_message_from": "from",
         "_dcterms_created": "date",
         "_message_cc": "cc_raw",
         "_message_raw_header_x_to": "filtered_to",
         "_message_raw_header_x_from": "filtered_from",
         "_message_raw_header_x_cc": "filtered_cc"
       }
       update_mode: "overwrite"
     },
     {
       name: "deleteFields"
       class : "com.kmwllc.lucille.stage.DeleteFields"
       fields : ["file_modification_date", "file_creation_date", "file_size_bytes", "file_content"]
     }
    ]
  }
]

indexer {
  type: "OpenSearch"
  batchTimeout: 1000
  batchSize: 2000
  # uncomment below if you want message_id to replace id
  # idOverrideField: "message_id"
  sendEnabled: true
}

opensearch {
  # example format of opensearch url
  # url: https://username:password@localhost:9200
  url: "http://localhost:9200"
  url: ${?OPENSEARCH_URL}

  # name of your opensearch index
  index: "enron"
  index: ${?OPENSEARCH_INDEX}
  acceptInvalidCert: true
}

worker {
  pipeline: "pipeline1"
  threads: 1
}