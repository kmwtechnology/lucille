# Document generation example: creates synthetic docs and indexes to Elasticsearch.

connectors: [
  {
    # Generates N empty docs with only an ID. Stages fill in fields.
    class: "com.kmwllc.lucille.connector.SequenceConnector"
    name: "connector1"
    pipeline: "pipeline1"
    numDocs: 100
    numDocs: ${?NUM_DOCS}
  }
]

pipelines: [
  {
    name: "pipeline1"
    stages: [

      # Random text
      {
        # Uses AddRandomString to build a long, space-joined text field from a local term file.
        name: "test_text"
        class: "com.kmwllc.lucille.stage.AddRandomString"
        field_name: "text_example"
        input_data_path: "resources/example-dictionary.txt"
        min_num_of_terms: 10
        max_num_of_terms: 200
        concatenate: true   # join terms into a single string
      },

      # Random numbers
      {
        name: "test_integer"
        class: "com.kmwllc.lucille.stage.AddRandomInt"
        field_name: "integer_example"
        range_start: 0
        range_end: 100000
      },
      {
        name: "test_double"
        class: "com.kmwllc.lucille.stage.AddRandomDouble"
        field_name: "double_example"
        range_start: 10.3
        range_end: 534.8
      },

      # Random boolean
      {
        name: "test_boolean"
        class: "com.kmwllc.lucille.stage.AddRandomBoolean"
        field_name: "boolean_example"
        percent_true: 60   # 60% true, 40% false
      },

      # Random date
      {
        name: "test_date"
        class: "com.kmwllc.lucille.stage.AddRandomDate"
        field_name: "date_example"
        range_start_date: "2015-07-31"   # yyyy-MM-dd
        range_end_date:   "2025-07-31"   # yyyy-MM-dd
      },

      # Random nested structure
      {
        # Builds an array of objects at nested_example, each with field_a/b/c.
        # Values come from a local generator (stringGen) using your terms.
        name: "test_nested"
        class: "com.kmwllc.lucille.stage.AddRandomNestedField"
        target_field: "nested_example"
        min_num_objects: 1
        max_num_objects: 20

        # Map "destination path in each object" -> "source field or generator key".
        entries: {
          "field_a" = "stringGen"
          "field_b" = "stringGen"
          "field_c" = "stringGen"
        }

        # Generators only run when the source field is missing. Here we always rely on the generator.
        generators: {
          stringGen = {
            class: "com.kmwllc.lucille.stage.AddRandomString"
            input_data_path: "resources/example-dictionary.txt"
            min_num_of_terms: 1
            max_num_of_terms: 5
            concatenate: true
          }
        }
      }
    ]
  }
]

# Indexer
# By default, this targets Elasticsearch. Turn off sending by changing sendEnabled to false.
indexer {
  type: "Elasticsearch"
  batchSize: 1000
  batchTimeout: 1000
  logRate: 1000
  sendEnabled: true
  sendEnabled: ${?ES_SEND_ENABLED}
}

elasticsearch {
  url:   "http://localhost:9200"
  url:   ${?ES_URL}
  index: "test_docs"
  index: ${?ES_INDEX}
  acceptInvalidCert: true
}